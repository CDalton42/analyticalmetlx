var TokBox=function(){var a=void 0,m=function(){return void 0!=a&&"isConnected"in a&&a.isConnected()},n=void 0,d=void 0,k=void 0,p=void 0,l=void 0,q=void 0,r=!1,g={};$(function(){d=$("#videoConfStartButton");k=$("#videoConfContainer");p=$("#videoSubsciptionsContainer");l=$("#broadcastContainer");q=l.find("#broadcastLink").clone();n=k.find(".videoContainer").clone();k.empty();l.empty();e()});var e=function(){d.unbind("click");r&&m()?(k.show(),"capabilities"in a&&"publish"in a.capabilities&&1==a.capabilities.publish?
(d.show(),d.on("click",t)):d.hide()):(d.hide(),k.hide());$(".subscribedStream").removeClass("subscribedStream");void 0!=h?d.addClass("subscribedStream"):d.removeClass("subscribedStream");_.forEach(g,function(a){console.log("refreshing s:",a);a.refreshVisual()})},h=void 0,t=function(){e();console.log("attempting to start send:",m(),a);if(m())if(void 0==h){var b=sprintf("tokBoxVideoElemPublisher_%s",_.uniqueId()),f=$("<span />",{id:b,"class":"publisherVideoElem"});k.append(f);h=b=OT.initPublisher(b,
{insertMode:"append",width:320,height:240,name:UserSettings.getUsername()},function(a){a&&console("error:",a)});console.log("publishing",b,a);a.publish(b)}else $(".publisherVideoElem").remove(),b=h,h=void 0,a.unpublish(b);e()};return{setTokBoxEnabledState:function(a){r=a;e()},startPublish:t,receiveBroadcast:function(a){console.log("broadcast:",a);if(null!=a&&"broadcastUrls"in a&&"hls"in a.broadcastUrls){var f=q.clone();f.attr("href",a.broadcastUrls.hls);l.append(f)}else l.empty()},receiveTokBoxSession:function(b){0!=
OT.checkSystemRequirements()&&(a=OT.initSession(b.apiKey,b.sessionId),a.on({streamDestroyed:function(a){if(a.stream.id in g){var c=g[a.stream.id];delete g[a.stream.id];console.log("streamDestroyed",a,c);c.elem.remove();e()}},streamCreated:function(f){if("capabilities"in a&&"subscribe"in a.capabilities&&1==a.capabilities.subscribe){var c=f.stream,b=$(n.clone()),d=sprintf("tokBoxVideoElemSubscriber_%s",_.uniqueId()),l=$("<span />",{id:d,"class":"subscriberVideoElem"});b.find(".icon-txt").text(f.stream.name);
var h=b.find(".videoConfSubscribeButton");c.id in g?h.addClass("subscribedStream"):h.removeClass("subscribedStream");b.find(".videoConfSubscribeButton").on("click",function(){if(c.id in g){var f=g[c.id];delete g[c.id];a.unsubscribe(f.subscriber);console.log("unsubscribed from stream:",c.name,c.id)}else f=a.subscribe(c,d,{insertMode:"append",width:320,height:240},function(a){a?(b.remove(),console.log("error when subscribing to stream",a,c.name,c.id)):console.log("subscribed to stream:",c.name,c.id)}),
g[c.id]={videoSelectorId:d,elem:b,subscriber:f,refreshVisual:function(){c.id in g?h.addClass("subscribedStream"):h.removeClass("subscribedStream")}};e()});p.append(b);k.append(l);e()}},sessionConnected:function(a){e()},sessionDisconnected:function(a){e()},sessionReconnected:function(a){e()},sessionReconnecting:function(a){e()}}),a.connect(b.token,function(a){a&&console.log("error when connecting to tokBox",a,b);e()}))},getIsConnected:m,getSession:function(){return a}}}();
function receiveTokBoxSessionToken(a){"token"in a&&TokBox.receiveTokBoxSession(a)}function receiveTokBoxEnabled(a){TokBox.setTokBoxEnabledState(a)}function receiveTokBoxArchives(a){console.log("archives:",a)}function receiveTokBoxBroadcast(a){TokBox.receiveBroadcast(a)};
